{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/pages/llamada/llamada.component.html","webpack:///src/app/pages/llamada/llamada.component.ts","webpack:///src/app/pages/login/login.component.ts","webpack:///src/app/pages/login/login.component.html","webpack:///src/app/pipes/modify-name.pipe.ts","webpack:///src/app/services/app-llamada.guard.service.ts","webpack:///src/app/services/sockets-status.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts","webpack:///ws (ignored)"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","APP_ROUTES","path","component","canActivate","pathMatch","redirectTo","ModuleRoutes","forRoot","imports","AppComponent","sockets","title","selector","templateUrl","styleUrls","config","url","options","AppModule","declarations","providers","bootstrap","LlamadaComponent","socketsService","router","camaraAbierta","spinner","_destroyed$","obtenerUsuariosVideollamada","getUsuariosConnect","obtenerStreamUsuario","next","complete","emitMessage","navigator","mediaDevices","getUserMedia","audio","video","width","height","stream","videoObject","document","getElementsByTagName","srcObject","streamVivo","canvas","createElement","setAttribute","context","getContext","interval","setInterval","capturarFotoUser","image","imagen","clearInterval","getTracks","stop","console","log","message","TypeError","err","fire","icon","localStorage","getItem","removeItem","navigateByUrl","listenServidorObtenerUsuarios","pipe","subscribe","data","users","usuariosConectadosVideollamada","imageUserHTML","getElementById","src","userExit","listenStreamUsuario","htmlTag","drawImage","foto","toDataURL","LoginComponent","nameUsuario","socketStatus","length","user","name","_id","listenServidorIngresUsuario","ingreso","setItem","loginUser","ModifyNamePipe","nameModify","split","toUpperCase","substr","AppLlamadaGuards","getToken","providedIn","SocketsStatusService","socket","detectStatusSockets","on","evento","payload","callback","emit","fromEvent","environment","production","bootstrapModule","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","\r\n  import { RouterModule, Routes } from '@angular/router';\r\n  import { NgModule } from '@angular/core';\r\n\r\n  // pages\r\n  import { LoginComponent } from './pages/login/login.component';\r\n  import { LlamadaComponent } from './pages/llamada/llamada.component';\r\n\r\n  // guards\r\n  import { AppLlamadaGuards } from '@services/app-llamada.guard.service';\r\n\r\n\r\n  const APP_ROUTES: Routes = [\r\n    { path: '', component: LoginComponent },\r\n    { path: 'app', component: LlamadaComponent,  canActivate : [ AppLlamadaGuards ] },\r\n    { path: '**', pathMatch: 'full', redirectTo: '' }\r\n  ];\r\n\r\n  @NgModule({\r\n    imports : [ RouterModule.forRoot(APP_ROUTES) ],\r\n    exports : [ RouterModule ]\r\n  })\r\n\r\n  export class ModuleRoutes {}\r\n","import { Component } from '@angular/core';\nimport { SocketsStatusService } from '@services/sockets-status.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'videollamada-app';\n\n  constructor(public sockets : SocketsStatusService){\n  }\n\n}\n","\n  <!-- rutas -->\n  <router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule  } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\n\n// environments\nimport { environment } from '@environments/environment';\n\n// angular material\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\n\n\n// sockets\nimport { SocketIoConfig, SocketIoModule } from 'ngx-socket-io';\nconst config : SocketIoConfig = { url : environment.url, options : {} };\n\n// pipes\nimport { ModifyNamePipe } from './pipes/modify-name.pipe';\n\n// rutas\nimport { ModuleRoutes } from './app-routing';\n\n\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './pages/login/login.component';\nimport { LlamadaComponent } from './pages/llamada/llamada.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    LlamadaComponent,\n    ModifyNamePipe\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    MatToolbarModule,\n    MatButtonModule,\n    ReactiveFormsModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatProgressSpinnerModule,\n    SocketIoModule.forRoot(config),\n    ModuleRoutes\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","\n<div class=\"container_principal animated fadeIn fast\">\n\n  <aside class=\"sidebar\">\n\n    <h4>Usuarios conectados</h4>\n    <ul *ngIf=\"usuariosConectadosVideollamada\">\n      <li *ngFor=\"let usuario of usuariosConectadosVideollamada\">\n        <i class=\"fas fa-circle icon_connect\"></i>{{ usuario.name | modifyName }}\n      </li>\n    </ul>\n\n  </aside>\n\n  <section class=\"videollamada_section\">\n\n    <div>\n      <video id=\"player\" controls autoplay *ngIf=\"camaraAbierta\"></video>\n      <img src=\"assets/noimage.png\" alt=\"noimage\" height=\"200\" *ngIf=\"!camaraAbierta\">\n\n      <section class=\"spinner\" *ngIf=\"spinner\">\n        <mat-spinner color=\"accent\"></mat-spinner>\n      </section>\n\n      <button *ngIf=\"!camaraAbierta\" mat-raised-button color=\"primary\" (click)=\"abrirCamara()\">\n        <i class=\"fa fa-camera\"></i>\n        Abrir camara\n      </button>\n\n      <button *ngIf=\"camaraAbierta\" mat-raised-button color=\"warn\" (click)=\"pararCamara()\">\n        <i class=\"fas fa-stop-circle\"></i>\n        Parar camara y salir\n      </button>\n\n\n      <img id=\"stream-user\">\n    </div>\n\n\n\n\n  </section>\n\n\n</div>\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { SocketsStatusService } from '@services/sockets-status.service';\nimport { Router } from '@angular/router';\nimport { takeUntil } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\n\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-llamada',\n  templateUrl: './llamada.component.html',\n  styleUrls: ['./llamada.component.css']\n})\nexport class LlamadaComponent implements OnInit, OnDestroy {\n  public usuariosConectadosVideollamada : [{name : string, _id : string}];\n  public camaraAbierta : boolean = false;\n  public streamVivo : any;\n  public interval : any;\n  public spinner : boolean = false;\n  private _destroyed$ = new Subject();\n\n  constructor(public socketsService : SocketsStatusService, public router : Router) { }\n\n  ngOnInit(): void {\n    this.obtenerUsuariosVideollamada();\n    this.getUsuariosConnect();\n    this.obtenerStreamUsuario();\n  }\n\n  ngOnDestroy(){\n      this._destroyed$.next();\n      this._destroyed$.complete();\n  }\n\n  obtenerUsuariosVideollamada(){\n    this.socketsService.emitMessage('obtener-usuarios');\n  };\n\n   abrirCamara(){\n\n    if( navigator.mediaDevices ){\n          this.camaraAbierta = true;\n\n          this.spinner = true;\n          navigator.mediaDevices.getUserMedia({ audio : true, video : { width : 200, height : 200 } })\n                   .then(async(stream) => {\n                     let videoObject : any = document.getElementsByTagName('video');\n                     videoObject[0].srcObject = stream;\n                     this.streamVivo = stream;\n\n                     this.spinner = false;\n\n                     // creamos el canvas\n                     let canvas = document.createElement('canvas');\n\n                     canvas.setAttribute('width', '280');\n                     canvas.setAttribute('height', '280');\n\n                     let context = canvas.getContext('2d');\n\n\n                     this.interval = setInterval(async () => {\n                        try {\n                          const image = await this.capturarFotoUser(videoObject[0], canvas, context);\n\n                          // emitir stream de datos\n                          this.socketsService.emitMessage('stream-data', {imagen : image});\n\n                        } catch(err) {\n                            clearInterval(this.interval);\n\n                            if(this.streamVivo){\n                              this.streamVivo.getTracks()[0].stop();\n                              this.streamVivo.getTracks()[1].stop();\n                            }\n\n                            this.spinner = false;\n                            console.log('Error en stream de usuario', err);\n                            console.log(err.message);\n\n                            if(err == 'TypeError'){\n                                console.log('Yes');\n                            }\n                            if(err.TypeError){\n                                console.log('Yes 2');\n                            }\n                        }\n\n                      }, 100);\n\n                   })\n                   .catch((err:Error) => {\n                     console.log(err);\n                     this.spinner = false;\n                     this.camaraAbierta = false;\n                     if( err.message == 'Permission denied' ){\n                        Swal.fire({\n                           icon : 'info',\n                           title : 'Para acceder a la videollamada debes permitir la utilizacion de la camara y audio'\n                        })\n                     };\n\n                     if(err.message == 'Could not start video source'){\n                         Swal.fire({\n                            icon : 'info',\n                            title : 'Existe un problema con tu camara'\n                         })\n                     }\n                   });\n\n    } else {\n        console.log('No soportado');\n    }\n  };\n\n  pararCamara(){\n    if(this.streamVivo){\n      this.streamVivo.getTracks()[0].stop();\n      this.streamVivo.getTracks()[1].stop();\n      clearInterval(this.interval);\n\n      this.socketsService.emitMessage('salir-videollamada', localStorage.getItem('user'));\n      localStorage.removeItem('user');\n      this.router.navigateByUrl('/');\n    }\n  };\n\n  getUsuariosConnect(){\n    this.socketsService.listenServidorObtenerUsuarios().pipe( takeUntil(this._destroyed$) ).subscribe((\n      data : {users:[{name : string, _id : string}], userExit : string}) => {\n\n      if(data.users) this.usuariosConectadosVideollamada = data.users;\n      else (this.usuariosConectadosVideollamada as any) = data;\n\n      if(this.streamVivo){\n        this.streamVivo.getTracks()[0].stop();\n        this.streamVivo.getTracks()[1].stop();\n      }\n\n      let imageUserHTML : any = document.getElementById('stream-user');\n      if( imageUserHTML && imageUserHTML.src ){\n            console.log(imageUserHTML);\n            imageUserHTML.src = 'assets/noimage.png';\n\n      }\n\n      if( data.userExit && localStorage.getItem('user') ){\n        Swal.fire({\n          title: `${ data.userExit } ha salido de la sesion`,\n          icon : 'info'\n        });\n      }\n\n\n    })\n\n  };\n\n  obtenerStreamUsuario(){\n    let imageUserHTML : any = document.getElementById('stream-user');\n\n    this.socketsService.listenStreamUsuario().pipe( takeUntil(this._destroyed$) ).subscribe(imagen => {\n      imageUserHTML.src = imagen;\n    });\n  };\n\n\n  capturarFotoUser(htmlTag, canvas, context): Promise<string>{\n    if(htmlTag){\n      context.drawImage(htmlTag, 0, 0, canvas.width, canvas.height);\n      let foto = context.canvas.toDataURL();\n\n      return Promise.resolve(foto);\n    }\n  };\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { SocketsStatusService } from '@services/sockets-status.service';\nimport { uuid } from 'uuidv4';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor(public sockets : SocketsStatusService, public router : Router) {\n  }\n\n  ngOnInit(): void {\n    if( localStorage.getItem('user') ) {\n      this.sockets.emitMessage('salir-videollamada', localStorage.getItem('user'));\n      localStorage.removeItem('user');\n    }\n\n\n  }\n\n  loginUser(nameUsuario : string){\n\n    if(this.sockets.socketStatus && nameUsuario.length > 0){\n\n      // crear el objecto con datos del usuario\n      const user = { name : nameUsuario, _id : uuid() };\n\n      // guardar info en servidor de usuario\n      this.sockets.emitMessage('usuario-conectado', user);\n\n      // redirecionar a la vista de llamada\n      this.sockets.listenServidorIngresUsuario().subscribe((ingreso:{ingreso:boolean}) => {\n        localStorage.setItem('user', nameUsuario);\n        if( ingreso ) this.router.navigateByUrl('/app');\n        else return;\n      });\n\n    } else { return };\n\n  };\n\n\n}\n","\n<mat-toolbar color=\"primary\" class=\"animated fadeIn fast\">\n  <mat-toolbar-row>\n    <span>\n      <i class=\"fas fa-video\"></i>\n      VideoChat\n    </span>\n  </mat-toolbar-row>\n</mat-toolbar>\n\n  <div class=\"div_name animated fadeIn fast\">\n\n    <mat-form-field>\n      <input matInput placeholder=\"Ingresa tu nombre....\" #nameInput autocomplete=\"off\">\n    </mat-form-field>\n\n    <button mat-raised-button color=\"primary\" [ngClass]=\"{'bloqueado' : !sockets.socketStatus, 'habilitado' : sockets.socketStatus}\"\n    (click)=\"loginUser(nameInput.value)\">\n      Ingresar\n      <i class=\"fas fa-sign-in-alt\"></i>\n    </button>\n\n  </div>\n","\r\n  import { PipeTransform, Pipe } from '@angular/core';\r\n\r\n  @Pipe({\r\n    name : 'modifyName'\r\n  })\r\n\r\n  export class ModifyNamePipe implements PipeTransform {\r\n\r\n    constructor(){}\r\n\r\n    transform( name : string): string {\r\n      let nameModify = name.split(' ')[0][0].toUpperCase() + name.split(' ')[0].substr(1);\r\n\r\n      return nameModify;\r\n    }\r\n\r\n\r\n\r\n  }\r\n","\r\n  import { Injectable } from '@angular/core';\r\n  import { CanActivate, Router } from '@angular/router';\r\n\r\n  @Injectable({\r\n    providedIn : 'root'\r\n  })\r\n\r\n  export class AppLlamadaGuards implements CanActivate {\r\n\r\n    constructor(public router : Router){\r\n    }\r\n\r\n    getToken(): Boolean{\r\n      return !!localStorage.getItem('user');\r\n    }\r\n\r\n    canActivate(){\r\n      if( this.getToken() ){\r\n          return true;\r\n      } else {\r\n          this.router.navigateByUrl('/');\r\n          return false;\r\n      }\r\n    }\r\n\r\n  }\r\n","\r\n  import { Injectable } from '@angular/core';\r\n  import { Socket } from 'ngx-socket-io';\r\n  import { Router } from '@angular/router';\r\n\r\n  @Injectable({\r\n    providedIn : 'root'\r\n  })\r\n\r\n  export class SocketsStatusService {\r\n\r\n    public socketStatus = false;\r\n\r\n    constructor(public socket : Socket, private router : Router){\r\n      this.detectStatusSockets();\r\n    }\r\n\r\n    detectStatusSockets(){\r\n      this.socket.on('connect', () => {\r\n        console.log('conectado');\r\n        this.socketStatus = true;\r\n      });\r\n\r\n      this.socket.on('disconnect', () => {\r\n        console.log('desconectado');\r\n        if(localStorage.getItem('user')){\r\n            this.emitMessage('salir-videollamada', localStorage.getItem('user'));\r\n            localStorage.removeItem('user');\r\n        }\r\n        this.router.navigateByUrl('/');\r\n\r\n        this.socketStatus = false;\r\n      });\r\n    };\r\n\r\n    emitMessage(evento : string, payload? : any, callback? : Function ){\r\n        this.socket.emit(evento, payload, callback);\r\n    };\r\n\r\n    listenServidorIngresUsuario(){\r\n     return this.socket.fromEvent('permitir-ingreso');\r\n    };\r\n\r\n    listenServidorObtenerUsuarios(){\r\n     return this.socket.fromEvent('obtener-usuarios');\r\n    };\r\n\r\n    listenStreamUsuario(){\r\n      return this.socket.fromEvent('stream-usuario');\r\n    }\r\n\r\n\r\n  }\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  url : 'http://localhost:3000'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","/* (ignored) */"]}